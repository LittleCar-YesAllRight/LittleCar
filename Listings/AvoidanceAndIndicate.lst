C51 COMPILER V9.54   AVOIDANCEANDINDICATE                                                  07/30/2020 21:21:11 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE AVOIDANCEANDINDICATE
OBJECT MODULE PLACED IN .\Objects\AvoidanceAndIndicate.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE AvoidanceAndIndicate.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\AvoidanceAndIndicate.lst) TABS(2) OBJECT(.\Objects\AvoidanceAndIndicate.obj)

line level    source

   1          #include "reg52.h"  // keil下请解除这个的注释
   2          #define ABS_NOT(x) (x<0?~x:x)
   3          #define digit P0  // 数字灯
   4          // 马达
   5          sbit moto_RF=P1^3;  // 右轮向前    
   6          sbit moto_RB=P1^2;  // 右轮向后
   7          sbit moto_LF=P1^1;  // 左轮向前
   8          sbit moto_LB=P1^0;  // 左轮向后
   9          sbit ena=P1^4;  // 使能A，用于左轮PWM调速
  10          sbit enb=P1^5;  // 使能B，用于右轮PWM调速
  11          // 红外避障串口,有障碍为0
  12          sbit linfrared=P3^4;  // 左红外
  13          sbit rinfrared=P3^5;  // 右红外
  14          // 巡线串口, 压线为0
  15          sbit llp=P3^7;  // 左巡线
  16          sbit rlp=P3^6;  // 右巡线
  17          sbit led1=P0^1;
  18          
  19          //void Delay(unsigned short);
  20          void init_sys(void);
  21          void CarRunPro(char left_rate,char right_rate);
  22          void Avoidance(void);
  23          void FlashLightStatus(void);
  24          char ldutyfactor=127;
  25          char rdutyfactor=127;
  26          
  27          int main(void)
  28          {
  29   1          init_sys();
  30   1          while(1)
  31   1          {
  32   2            CarRunPro(10,10);
  33   2              //Avoidance();
  34   2              //Patrol();
  35   2              
  36   2              //FlashLightStatus();
  37   2          }
  38   1      }
  39          
  40          void init_sys()
  41          {
  42   1          TMOD=0x01;
  43   1          TH0=0xFF;
  44   1          TL0=0xF6;
  45   1          TR0=1;
  46   1          ET0=1;
  47   1          EA=1;
  48   1      }
  49          
  50          /***********************************
  51          *函数名称：void Avoidance()
  52          *函数功能：避障
  53          *参数说明：无参数
  54          
C51 COMPILER V9.54   AVOIDANCEANDINDICATE                                                  07/30/2020 21:21:11 PAGE 2   

  55          ***********************************/
  56          void Avoidance()
  57          {
  58   1          if(1==linfrared && 1==rinfrared)  // 没有障碍,并且不压线
  59   1              CarRunPro(127,127);
  60   1          else if(0==linfrared && 1==rinfrared)  // 左边有障碍 
  61   1              CarRunPro(127,-127);
  62   1          else if(1==linfrared && 0==rinfrared)  // 右边有障碍 
  63   1              CarRunPro(-127,127);
  64   1          else if(0==linfrared && 0==rinfrared)  // 前面有障碍
  65   1              CarRunPro(-127,0);
  66   1      }
  67          /**********************************
  68          ***********************************/
  69          
  70          /***********************************
  71          *函数名称：void CarRunPro()
  72          *函数功能：PWM控制的小车行驶函数
  73          *参数说明：left_rate和right_rate为占空比,范围-100~100,0未停止
  74          
  75          ***********************************/
  76          void CarRunPro(char left_rate,char right_rate)
  77          {
  78   1          rdutyfactor=right_rate;
  79   1          ldutyfactor=left_rate;
  80   1          // 左轮
  81   1          if (left_rate>0)
  82   1          {
  83   2              moto_LF=1;
  84   2              moto_LB=0;
  85   2          }else if (left_rate<-1)
  86   1          {
  87   2              moto_LF=0;
  88   2              moto_LB=1;
  89   2          }else
  90   1          {
  91   2              moto_LF=0;
  92   2              moto_LB=0;
  93   2          }
  94   1          // 右轮
  95   1          if (right_rate>0)
  96   1          {
  97   2              moto_RF=1;
  98   2              moto_RB=0;
  99   2          }else if (right_rate<-1)
 100   1          {
 101   2              moto_RF=0;
 102   2              moto_RB=1;
 103   2          }else
 104   1          {
 105   2              moto_RF=0;
 106   2              moto_RB=0;
 107   2          }
 108   1      }
 109          /**********************************
 110          ***********************************/
 111          
 112          
 113          
 114          /***********************************
 115          *函数名称：void FlashLightStatus()
 116          *函数功能：刷新小车数字灯, 指示小车运行状态
C51 COMPILER V9.54   AVOIDANCEANDINDICATE                                                  07/30/2020 21:21:11 PAGE 3   

 117          *参数说明：无参数
 118          
 119          ***********************************/
 120          void FlashLightStatus()
 121          {
 122   1          int status;
 123   1          status=1*(1==moto_RF)+2*(1==moto_RB)+3*(1==moto_LF)+6*(1==moto_LB);
 124   1          switch(status){
 125   2              case 0:  // 停止时
 126   2                  digit=0xFD;  // 中
 127   2                  break;
 128   2              case 1:  // 只有右轮前进时
 129   2                  digit=0xFB;  // 左前
 130   2                  break;
 131   2              case 2:  // 只有右轮后退时
 132   2                  digit=0xF7;  // 左后
 133   2                  break;
 134   2              case 3:  //  只有左轮前进时
 135   2                  digit=0xBF;  // 右前
 136   2                  break;
 137   2              case 4:  // 左右轮同时前进时
 138   2                  digit=0x7F;  // 前
 139   2                  break;
 140   2              case 5:  // 右轮前进左轮后退时
 141   2                  digit=0xDB;  // 前
 142   2                  break;
 143   2              case 6:  // 左轮后退时
 144   2                  digit=0xDF;  // 右后
 145   2                  break;
 146   2              case 7:  // 右轮前进左轮后退时
 147   2                  digit=0xB7;  // 右前左后
 148   2                  break;
 149   2              case 8:  // 左右轮同时后退时
 150   2                  digit=0xD7;  // 后
 151   2                  break;
 152   2          }
 153   1      }
 154          /**********************************
 155          ***********************************/
 156          
 157          void timer0(void) interrupt 1 using 2
 158          {
 159   1        static char l=0,r=0;
 160   1        
 161   1          if(l<ldutyfactor)
 162   1            ena=1;
 163   1            else
 164   1              ena=0;
 165   1        if(r<rdutyfactor)
 166   1          enb=1;
 167   1        else
 168   1          enb=0;
 169   1            TH0=0xFF;
 170   1          TL0=0xF6;
 171   1        l=(l+1)%128;
 172   1        r=(r+1)%128;
 173   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    410    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   AVOIDANCEANDINDICATE                                                  07/30/2020 21:21:11 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
